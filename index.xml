<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yakup Ates</title>
    <link>https://y-ates.github.io/</link>
    <description>Recent content on Yakup Ates</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Dec 2020 20:04:04 +0100</lastBuildDate><atom:link href="https://y-ates.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CTF Challenge one!</title>
      <link>https://y-ates.github.io/ctf/ctf1/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0200</pubDate>
      
      <guid>https://y-ates.github.io/ctf/ctf1/</guid>
      <description>test</description>
    </item>
    
    <item>
      <title>torproxy</title>
      <link>https://y-ates.github.io/generaldev/torproxy/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0200</pubDate>
      
      <guid>https://y-ates.github.io/generaldev/torproxy/</guid>
      <description>I am using Tor for quite a while now and it got really fast over the years. Meanwhile there are several options to run traffic through Tor and one of them is using a &amp;ldquo;dockerized&amp;rdquo; container. The most used image is probably the one from this repository: torproxy-by-dperson. And to run all traffic through this docker it was necessary to do some iptables, but luckily there was also a shell script given.</description>
    </item>
    
    <item>
      <title>Developing an automatic plant irrigation system</title>
      <link>https://y-ates.github.io/embedded/arduino-plantlife/</link>
      <pubDate>Thu, 02 Jun 2016 00:00:00 +0200</pubDate>
      
      <guid>https://y-ates.github.io/embedded/arduino-plantlife/</guid>
      <description>I was working with an Arduino the last few weeks and never did before. But not only an Arduino, the Arduino was cooperating with an circuit and communicating with a Raspberry Pi.
Actually, it was pretty fun. But there were some problems for which I still don&amp;rsquo;t have a solution for. E.g. Arduino IDE not pushing the code with the following error message:
avrdude: stk500_recv(): programmer is not responding. There were some posts on the Internet like StackOverflow, but those weren&amp;rsquo;t the solutions.</description>
    </item>
    
    <item>
      <title>XSS Polyglots</title>
      <link>https://y-ates.github.io/secresearch/xss_polyglots/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0200</pubDate>
      
      <guid>https://y-ates.github.io/secresearch/xss_polyglots/</guid>
      <description>In the following I want to introduce several so called &amp;ldquo;XSS Polyglots&amp;rdquo;. A XSS polyglot is an XSS attack vector which is able to execute in various contexts. Thus, one can inject less attack vectors, get a lot of attack surface covered and analyze the behavior of the application using less requests. Furthermore, as it covers several attack vectors in one, the probability to develop a successful attack vector increases. Another reason to use a XSS polyglot is to bypass the Content-Security-Policy (CSP), which is an added security layer for XSS detection and mitigation, provided by the browser.</description>
    </item>
    
    <item>
      <title>Creating custom wordlists</title>
      <link>https://y-ates.github.io/secresearch/custom_wordlist_generation/</link>
      <pubDate>Sun, 10 May 2020 00:00:00 +0200</pubDate>
      
      <guid>https://y-ates.github.io/secresearch/custom_wordlist_generation/</guid>
      <description>A brute-force attack on passwords/usernames using a custom generated wordlist can be way more efficient than to use some standard wordfiles like for example the famous &amp;ldquo;rockyou.txt&amp;rdquo;. In the following I will share a technique to generate your own custom wordlist.
First of all, you should gather some information about your target and analyze it. You are looking for most used words, hobbies and anything that your target could use in his password.</description>
    </item>
    
    <item>
      <title>DOM-Clobbering</title>
      <link>https://y-ates.github.io/secresearch/domclobbering/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0200</pubDate>
      
      <guid>https://y-ates.github.io/secresearch/domclobbering/</guid>
      <description>test</description>
    </item>
    
    <item>
      <title>Serialized Objects</title>
      <link>https://y-ates.github.io/secresearch/serialized_objects/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0200</pubDate>
      
      <guid>https://y-ates.github.io/secresearch/serialized_objects/</guid>
      <description>Object serialization is an important aspect of any non-trivial program. When running around through the jungle one easily encounters these types of files.
As serialized files will get deserialized at some but by the application an interesting vulnerability comes into mind Insecure Object Deserialization. An Insecure Object Deserialization occurs when an application attempts to deserialize untrusted data. Without experience it can get pretty tricky to detect serialized files and thus one might overlook this type of vulnerability.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://y-ates.github.io/ctf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://y-ates.github.io/ctf/</guid>
      <description> CTF  CTF Challenge one!   test
Footnotes   .my-table th, .my-table td { padding: 20px; text-align: left; }    # Topic URL     0 Raspberry DUMMY          </description>
    </item>
    
    <item>
      <title></title>
      <link>https://y-ates.github.io/embedded/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://y-ates.github.io/embedded/</guid>
      <description>Developing embedded devices  Developing an automatic plant irrigation system   I was working with an Arduino the last few weeks and never did before. But not only an Arduino, the Arduino was cooperating with an circuit and communicating with a Raspberry Pi.
 Actually, it was pretty fun. But there were some problems for which I still don&amp;#39;t have a solution for. E.g. Arduino IDE not pushing the code with the following error message:</description>
    </item>
    
    <item>
      <title></title>
      <link>https://y-ates.github.io/generaldev/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://y-ates.github.io/generaldev/</guid>
      <description>General Development  torproxy   I am using Tor for quite a while now and it got really fast over the years. Meanwhile there are several options to run traffic through Tor and one of them is using a &amp;#34;dockerized&amp;#34; container. The most used image is probably the one from this repository: torproxy-by-dperson. And to run all traffic through this docker it was necessary to do some iptables, but luckily there was also a shell script given.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://y-ates.github.io/secresearch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://y-ates.github.io/secresearch/</guid>
      <description>Researching IT-Security!  XSS Polyglots   In the following I want to introduce several so called &amp;#34;XSS Polyglots&amp;#34;. A XSS polyglot is an XSS attack vector which is able to execute in various contexts. Thus, one can inject less attack vectors, get a lot of attack surface covered and analyze the behavior of the application using less requests. Furthermore, as it covers several attack vectors in one, the probability to develop a successful attack vector increases.</description>
    </item>
    
  </channel>
</rss>
