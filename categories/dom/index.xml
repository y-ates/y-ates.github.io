<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DOM on Yakup Ates</title>
    <link>https://y-ates.github.io/categories/dom/</link>
    <description>Recent content in DOM on Yakup Ates</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 May 2020 00:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://y-ates.github.io/categories/dom/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Serialized Objects</title>
      <link>https://y-ates.github.io/secresearch/serialized_objects/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0200</pubDate>
      
      <guid>https://y-ates.github.io/secresearch/serialized_objects/</guid>
      <description>Object serialization is an important aspect of any non-trivial program. When running around through the jungle one easily encounters these types of files.
As serialized files will get deserialized at some but by the application an interesting vulnerability comes into mind Insecure Object Deserialization. An Insecure Object Deserialization occurs when an application attempts to deserialize untrusted data. Without experience it can get pretty tricky to detect serialized files and thus one might overlook this type of vulnerability.</description>
    </item>
    
    <item>
      <title>DOM-Clobbering</title>
      <link>https://y-ates.github.io/secresearch/domclobbering/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0200</pubDate>
      
      <guid>https://y-ates.github.io/secresearch/domclobbering/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Creating custom wordlists</title>
      <link>https://y-ates.github.io/secresearch/custom_wordlist_generation/</link>
      <pubDate>Sun, 10 May 2020 00:00:00 +0200</pubDate>
      
      <guid>https://y-ates.github.io/secresearch/custom_wordlist_generation/</guid>
      <description>A brute-force attack on passwords/usernames using a custom generated wordlist can be way more efficient than to use some standard wordfiles like for example the famous &amp;ldquo;rockyou.txt&amp;rdquo;. In the following I will share a technique to generate your own custom wordlist.
First of all, you should gather some information about your target and analyze it. You are looking for most used words, hobbies and anything that your target could use in his password.</description>
    </item>
    
  </channel>
</rss>